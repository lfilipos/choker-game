name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run unit and component tests
      run: npm test -- --coverage --watchAll=false --passWithNoTests
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  e2e:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Build the application
      run: npm run build
    
    - name: Start the application
      run: npm start &
    
    - name: Wait for the application to start
      run: npx wait-on http://localhost:3000
    
    - name: Run Playwright tests
      run: npx playwright test
    
    - name: Upload Playwright report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  accessibility:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Build the application
      run: npm run build
    
    - name: Start the application
      run: npm start &
    
    - name: Wait for the application to start
      run: npx wait-on http://localhost:3000
    
    - name: Run accessibility tests
      run: npx playwright test --grep "Accessibility"
    
    - name: Upload accessibility report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: accessibility-report
        path: accessibility-report/
        retention-days: 30

  performance:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Build the application
      run: npm run build
    
    - name: Start the application
      run: npm start &
    
    - name: Wait for the application to start
      run: npx wait-on http://localhost:3000
    
    - name: Run performance tests
      run: npx playwright test --grep "Performance"
    
    - name: Upload performance report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: performance-report
        path: performance-report/
        retention-days: 30

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=moderate
    
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  quality-gates:
    runs-on: ubuntu-latest
    needs: [test, e2e, accessibility, performance, security]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check test coverage
      run: |
        npm test -- --coverage --watchAll=false --passWithNoTests
        COVERAGE=$(cat coverage/coverage-summary.json | jq -r '.total.lines.pct')
        if (( $(echo "$COVERAGE < 80" | bc -l) )); then
          echo "Test coverage $COVERAGE% is below 80% threshold"
          exit 1
        fi
        echo "Test coverage $COVERAGE% meets threshold"
    
    - name: Quality gate summary
      run: |
        echo "## Quality Gate Results" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Unit/Component Tests: Passed" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ E2E Tests: Passed" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Accessibility Tests: Passed" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Performance Tests: Passed" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Security Audit: Passed" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Test Coverage: Meets 80% threshold" >> $GITHUB_STEP_SUMMARY

